generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model bank_hour {
  id     Int                @id(map: "PK_e4f0bb9596fa3c66b3c81ea0a4f") @default(autoincrement())
  userId String             @db.VarChar
  day    bank_hour_day_enum
  hour   Int
}

model instructions {
  id       String  @id(map: "PK_1695991f6159e4ae33b136a67ef") @db.VarChar
  name     String  @db.VarChar
  canceled Boolean @default(false)
}

model invite_simple {
  id        Int      @id(map: "PK_aae080d6a7a122487d8d6864508") @default(autoincrement())
  createdAt DateTime @default(now()) @db.Timestamp(6)
  discordId String   @db.VarChar
  alt       Boolean?
}

model item {
  id        Int              @id
  name      String
  price     String?
  type      bank_item_types?
  updatedAt DateTime         @default(now()) @updatedAt
  stock     slot[]
}

model slot {
  id        Int      @id @default(autoincrement())
  charSlot  String   @unique
  slot      String
  charName  String
  itemId    Int?
  count     Int?     @default(1)
  updatedAt DateTime @default(now()) @updatedAt
  char      char     @relation(fields: [charName], references: [name])
  item      item?    @relation(fields: [itemId], references: [id])
}

model char {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  charType  String
  updatedAt DateTime @default(now()) @updatedAt
  inventory slot[]
}

model typeorm_metadata {
  type     String  @db.VarChar
  database String? @db.VarChar
  schema   String? @db.VarChar
  table    String? @db.VarChar
  name     String? @db.VarChar
  value    String?
  id       Int     @id @default(autoincrement())

  @@ignore
}

model bot {
  class         String
  name          String   @unique
  location      String
  level         String
  currentPilot  String
  checkoutTime  String
  bindLocation  String
  requiredRoles String[]
}

model DsEntry {
  id         Int       @id @default(autoincrement())
  discordId  String
  timeIn     DateTime  @default(now())
  timeOut    DateTime?
  minutes    Int?
  adjustment Int?
  total      Int?
}

enum bank_hour_day_enum {
  Monday
  Tuesday
  Wednesday
  Thursday
  Friday
  Saturday
  Sunday
}

enum bank_item_types {
  dropped_spell
  research_spell
  research_component
  sky_droppable
  for_sale
  rechargeable
  raid_reagent
  not_available
}
